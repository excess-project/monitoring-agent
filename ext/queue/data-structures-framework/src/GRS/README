EXCESS GRS components for the EXCESS data structures framework

 Copyright (C) 2016  Anders Gidenstam

 License: GPL v3+

Currently in a very early state.

INSTALL
-------

1. Update the location of the GRS source in the COMPILE.sh script.
   Place help_cuda.o from GRS in the current directory.

2. Update the location of the SpGEMM_cuda directory of the modified
   bhSPARSE Benchmark_SpGEMM_using_CSR repository available at
     https://github.com/andgi/Benchmark_SpGEMM_using_CSR
   in the COMPILE.sh script.
   The original bhSPARSE repository is available at
     https://github.com/bhSPARSE/Benchmark_SpGEMM_using_CSR

3. Run ./COMPILE.sh
   Needs GCC and nvcc with OpenMP support.

3. The matrices needed can be downloaded from
     http://yifanhu.net/GALLERY/GRAPHS/search.html
   in Matrix Market format (see the top-level README).

4. Run the GRS sparse matrix-matrix multiplication test.
   $ ./grs_spmmtest ../../matrices/general/R16.mtx

   The usage is:

    Usage: ./grs_spmmtest [options] <matrix file>

      -h                Print this message and exit.
      -v <variant#>     Set the GRS SpGEMM variant to use.
                          0.  CPU (New EXCESS algorithm).
                          1.  GPU (bhSPARSE CSR cuda).
      -o <file>       Save the resulting matrix in <file> in MatrixMarket format.